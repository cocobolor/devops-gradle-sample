buildscript {
    ext {
        javaVersion = '11'
        springBootVersion = '2.7.1'
        sonarQubeVersion = '3.3'
        lombokVersion = '1.18.24'
        dependencyManagementPluginVersion = '1.0.11.RELEASE'
    }

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
    }

    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarQubeVersion}"
    }

}

plugins {
    id 'io.spring.dependency-management' version "${dependencyManagementPluginVersion}" apply false
    id 'org.springframework.boot' version "${springBootVersion}" apply false
    id 'org.sonarqube' version "${sonarQubeVersion}"
}

allprojects {
    group = 'org.sample'
    version '1.0.0'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.sonarqube'

    sourceCompatibility = "${javaVersion}"
    targetCompatibility = "${javaVersion}"

    repositories {
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
    }

    dependencies {
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
    }

    java {
        withSourcesJar()
    }

}
